##############
# PRODUCTION #
##############

# pull official base image
# FROM python:3.9.6-alpine

# # set environment variables
# ENV PYTHONDONTWRITEBYTECODE 1
# ENV PYTHONUNBUFFERED 1

# RUN apk update && apk add postgresql-dev gcc python3-dev musl-dev
# RUN apk add build-base linux-headers
# RUN apk add --no-cache bash

# # install dependencies
# COPY requirements/common.txt /tmp/common.txt
# COPY requirements/production.txt /tmp/production.txt
# RUN pip install --upgrade pip
# RUN pip install --no-cache-dir -r /tmp/production.txt

# # create the appropriate directories
# ENV HOME=/app
# RUN mkdir $HOME
# ENV APP_HOME=/app/web
# RUN mkdir $APP_HOME
# WORKDIR $APP_HOME


# # create the app user
# RUN addgroup -S app && adduser -S app -G app

# # copy project
# COPY . $APP_HOME

# # copy entrypoint.sh
# COPY ./entrypoint.prod.sh .
# RUN sed -i 's/\r$//g' /app/web/entrypoint.prod.sh
# RUN chmod +x /app/web/entrypoint.prod.sh


# # chown all the files to the app user
# RUN chown -R app:app $APP_HOME

# # change to the app user
# USER app

# # run entrypoint.prod.sh
# ENTRYPOINT ["/app/web/entrypoint.prod.sh"]

###########
# BUILDER #
###########

# pull official base image
FROM python:3.9.6-alpine as builder

# set work directory
WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apk update && apk add postgresql-dev gcc python3-dev musl-dev

# lint
# RUN pip install --upgrade pip
# RUN pip install flake8==3.9.2
# COPY . .
# RUN flake8 --ignore=E501,F401 .

# install dependencies
RUN pip install --upgrade pip
COPY requirements/common.txt /tmp/common.txt
COPY requirements/production.txt /tmp/production.txt
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r /tmp/production.txt

#########
# FINAL #
#########

# pull official base image
FROM python:3.9.6-alpine

# create the app user
RUN addgroup -S app && adduser -S app -G app

# create the appropriate directories
# ENV HOME=/app
ENV APP_HOME=/app
RUN mkdir $APP_HOME
WORKDIR $APP_HOME

# install dependencies
RUN apk update && apk add libpq
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /tmp/production.txt .
RUN pip install --no-cache /wheels/*

# copy entrypoint.prod.sh
COPY ./entrypoint.prod.sh .
RUN sed -i 's/\r$//g'  $APP_HOME/entrypoint.prod.sh
RUN chmod +x  $APP_HOME/entrypoint.prod.sh

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R app:app $APP_HOME

# change to the app user
USER app

# run entrypoint.prod.sh
# ENTRYPOINT ["/app/web/entrypoint.prod.sh"]