version: '3.8'

services:
  app:
    container_name: app
    build: .
    working_dir: /app
    volumes:
      - .:/app
    env_file:
      - ./env/development/.env
    tty: true
      

  web:
    extends:
      service: app
    working_dir: /app/django_project
    build: .
    container_name: web
    ports:
      - "8000:8000"
    command:
      - sh
      - -c
      - |
        sleep 5s
        python manage.py collectstatic --noinput
        python manage.py makemigrations
        python manage.py migrate
        python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app/
    depends_on:
      - db


  db:
    image: postgres:14.3-alpine
    env_file:
      - ./env/development/.db.env
    ports:
      - "5432:5432"
    container_name: db
    volumes:
      - ./django_project/db_dev:/var/lib/postgresql/data


  # jupyter:
  #   command: python manage.py shell_plus --notebook
  #   container_name: jupyter
  #   extends:
  #     service: app
  #   ports:
  #     - "8888:8888"
  #   environment:
  #     - DJANGO_SETTINGS_MODULE=portal.jupyter_settings
  #     - DJANGO_ALLOW_ASYNC_UNSAFE=true

  # postgres_admin:
  #   image: "dpage/pgadmin4:latest"
  #   container_name: pgadmin
  #   ports: 
  #     - "8100:80"
  #   volumes:
  #     - ./postgres_admin_data:/var/lib/pgadmin
  #   env_file:
  #     - ./portal/env/development/.env
  #   # depends_on:
  #   #   - db


  # mkdocs:
  #   build: .
  #   working_dir: /app/wiki/generic
  #   container_name: mkdocs
  #   ports:
  #     - "8200:8200"
  #   command:
  #     - /bin/bash
  #     - -c
  #     - |
  #       mkdocs build
  #       mkdocs serve -a 0.0.0.0:8200
  #   volumes:
  #     - ./wiki/generic:/app/wiki/generic

volumes:
  postgres_admin_data:
