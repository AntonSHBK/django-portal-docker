version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: ./docker/dockerfiles/dev/Dockerfile.back
    working_dir: /app/backend 
    env_file:
      - ./docker/env/development/.env
    ports:
      - "8000:8000"
      - "5678:5678"
    # command:
    #   - sh
    #   - -c
    #   - |
    #     python manage.py collectstatic --noinput
    #     python manage.py makemigrations
    #     python manage.py migrate
    #     python -m debugpy --listen 0.0.0.0:5678 manage.py runserver 0.0.0.0:8000
    command:
      - sh
      - -c
      - |
        python manage.py makemigrations
        python manage.py migrate
        python -m debugpy --listen 0.0.0.0:5678 manage.py runserver 0.0.0.0:8000
    # command:
    #   - sh
    #   - -c
    #   - |
    #     python manage.py runserver 0.0.0.0:8000
    #     sleep 5d
    volumes:
      - ./backend:/app/backend
    depends_on:
      - db


  db:
    image: postgres:14.3-alpine
    env_file:
      - ./docker/env/development/.db.env
    ports:
      - "5432:5432"
    volumes:
      - ./db:/var/lib/postgresql/data


  # nodejs:
  #   build:
  #     context: .
  #     dockerfile: ./docker/dockerfiles/dev/Dockerfile.front
  #   ports:
  #     - 3000:3000
  #   # volumes:
  #   #   - ./frontend:/app/frontend
  #   depends_on:
  #     - app
  #   command: npm run start


  redis:
    build:
      context: .
      dockerfile: ./docker/dockerfiles/redis/Dockerfile
    env_file:
      - ./docker/env/development/.env
    # logs /var/log/redis/redis-server.log
    volumes:
      - ./logs/redis/:/var/log/redis/


  supevisor:
    restart: always
    build:
      context: .
      dockerfile: ./docker/dockerfiles/dev/Dockerfile.back
    working_dir: /app/backend
    command:
      - /bin/bash
      - '-c'
      - |
        supervisord -c /etc/supervisor/supervisord.conf 
        supervisorctl reread
        supervisorctl update
        supervisorctl start all
        supervisorctl status
        echo  "Container in sleep status"
        sleep 5d
    
    volumes:
      - ./logs/supervisor:/var/log/app/
    env_file:
      - ./docker/env/development/.env
    depends_on:
      - app
      - redis

  # mkdocs:
  #   build:
  #     context: .
  #     dockerfile: /docker/dockerfiles/MkDocs/Dockerfile
  #   working_dir: /app/wiki/
  #   ports:
  #     - "8200:8200"
  #   command:
  #     - /bin/bash
  #     - -c
  #     - |
  #       mkdocs build
  #       mkdocs serve -a 0.0.0.0:8200
  #   volumes:
  #     - ./wiki/:/app/wiki/

  # jupyter:    
  #   working_dir: /app/backend
  #   command:
  #     - sh
  #     - -c
  #     - |
  #       sleep 30s
  #       python manage.py shell_plus --notebook
  #   container_name: jupyter
  #   extends:
  #     service: app
  #   ports:
  #     - "8888:8888"
  #   env_file:
  #     - ./env/development/.env
  #   depends_on:
  #     - web
  
  ## PgAdmin
  ## https://stackoverflow.com/questions/57109494/unable-to-connect-to-server-pgadmin-4
  # pg_admin:
  #   image: dpage/pgadmin4:7
  #   environment:
  #       PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
  #       PGADMIN_DEFAULT_PASSWORD: masterkey
  #       PGADMIN_LISTEN_PORT: 80
  #   ports:
  #       - 15432:80
  #   volumes:
  #       - ./backend/pgadmin:/var/lib/pgadmin
  #   depends_on:
  #       - db